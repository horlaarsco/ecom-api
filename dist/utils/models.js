"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var apollo_server_1 = require("apollo-server");
exports.typeDefs = apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  enum Role {\n    Admin\n    User\n  }\n\n  enum Category {\n    Male\n    Female\n  }\n  type User {\n    id: ID\n    firstName: String!\n    lastName: String!\n    username: String!\n    email: String!\n    password: String\n    verified: Boolean!\n    createdAt: String\n    updatedAt: String\n    role: Role\n    tokens: [String]\n  }\n\n  type Brand {\n    id: ID\n    name: String!\n    description: String!\n    slug: String\n  }\n\n  type Product {\n    id: ID\n    name: String!\n    owner: User!\n    description: String!\n    slug: String\n    brand: Brand!\n    price: Int!\n    quantity: Int!\n    createdAt: String\n    updatedAt: String\n    salePrice: Int!\n    category: Category\n  }\n\n  input ProductInput {\n    name: String!\n    owner: String!\n    description: String!\n    brand: String!\n    price: Int!\n    quantity: Int!\n    salePrice: Int!\n    category: Category\n  }\n\n  input UserInput {\n    firstName: String!\n    lastName: String!\n    username: String!\n    email: String!\n    password: String!\n    verified: Boolean\n    role: String!\n  }\n\n  input EditUserInput {\n    firstName: String!\n    lastName: String!\n    username: String!\n    email: String!\n    verified: Boolean\n    role: String!\n  }\n\n  input BrandInput {\n    name: String!\n    description: String!\n  }\n\n  type Query {\n    user(id: ID!): User!\n    users: [User!]!\n    brand(id: ID!): Brand!\n    brands: [Brand!]!\n    product(id: ID!): Product!\n    products: [Product!]!\n  }\n\n  type Mutation {\n    addUser(input: UserInput): User!\n    editUser(input: EditUserInput, id: ID!): User!\n    deleteUser(id: ID!): User!\n    editPassword(password: String!, id: ID!): User!\n    addBrand(input: BrandInput): Brand!\n    editBrand(input: BrandInput, id: ID!): Brand!\n    deleteBrand(id: ID!): Brand!\n    addProduct(input: ProductInput): Product!\n    editProduct(input: ProductInput, id: ID!): Product!\n    deleteProduct(id: ID!): Product!\n  }\n"], ["\n  enum Role {\n    Admin\n    User\n  }\n\n  enum Category {\n    Male\n    Female\n  }\n  type User {\n    id: ID\n    firstName: String!\n    lastName: String!\n    username: String!\n    email: String!\n    password: String\n    verified: Boolean!\n    createdAt: String\n    updatedAt: String\n    role: Role\n    tokens: [String]\n  }\n\n  type Brand {\n    id: ID\n    name: String!\n    description: String!\n    slug: String\n  }\n\n  type Product {\n    id: ID\n    name: String!\n    owner: User!\n    description: String!\n    slug: String\n    brand: Brand!\n    price: Int!\n    quantity: Int!\n    createdAt: String\n    updatedAt: String\n    salePrice: Int!\n    category: Category\n  }\n\n  input ProductInput {\n    name: String!\n    owner: String!\n    description: String!\n    brand: String!\n    price: Int!\n    quantity: Int!\n    salePrice: Int!\n    category: Category\n  }\n\n  input UserInput {\n    firstName: String!\n    lastName: String!\n    username: String!\n    email: String!\n    password: String!\n    verified: Boolean\n    role: String!\n  }\n\n  input EditUserInput {\n    firstName: String!\n    lastName: String!\n    username: String!\n    email: String!\n    verified: Boolean\n    role: String!\n  }\n\n  input BrandInput {\n    name: String!\n    description: String!\n  }\n\n  type Query {\n    user(id: ID!): User!\n    users: [User!]!\n    brand(id: ID!): Brand!\n    brands: [Brand!]!\n    product(id: ID!): Product!\n    products: [Product!]!\n  }\n\n  type Mutation {\n    addUser(input: UserInput): User!\n    editUser(input: EditUserInput, id: ID!): User!\n    deleteUser(id: ID!): User!\n    editPassword(password: String!, id: ID!): User!\n    addBrand(input: BrandInput): Brand!\n    editBrand(input: BrandInput, id: ID!): Brand!\n    deleteBrand(id: ID!): Brand!\n    addProduct(input: ProductInput): Product!\n    editProduct(input: ProductInput, id: ID!): Product!\n    deleteProduct(id: ID!): Product!\n  }\n"])));
var templateObject_1;
//# sourceMappingURL=models.js.map